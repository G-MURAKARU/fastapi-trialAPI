# provide the name/title of the workflow
name: CI/CD Pipeline with GitHub Actions

# specify the pipeline triggers
on: # [push, pull_request]
  # optional branch specification
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  job1:
    strategy:
      matrix:
        os: [macos-12, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Pull github repository
        uses: actions/checkout@v3
      - name: Install python versions 3.10 and 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Upgrade python-pip version
        run: python -m pip install --upgrade pip
      - name: Install all application dependencies
        run: pip install -r requirements.txt
      - name: Run tests with pytest
        run: |
          pip install pytest-cov
          pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
